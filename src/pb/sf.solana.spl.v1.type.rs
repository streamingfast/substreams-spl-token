// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SplInstructions {
    #[prost(message, repeated, tag="1")]
    pub instructions: ::prost::alloc::vec::Vec<Instruction>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Instruction {
    #[prost(string, tag="1")]
    pub instruction_id: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub transaction_hash: ::prost::alloc::string::String,
    #[prost(oneof="instruction::Item", tags="10, 11, 12, 13")]
    pub item: ::core::option::Option<instruction::Item>,
}
/// Nested message and enum types in `Instruction`.
pub mod instruction {
    #[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Item {
        #[prost(message, tag="10")]
        Mint(super::Mint),
        #[prost(message, tag="11")]
        Burn(super::Burn),
        #[prost(message, tag="12")]
        Transfer(super::Transfer),
        #[prost(message, tag="13")]
        InitializedAccount(super::InitializedAccount),
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Transfer {
    #[prost(string, tag="2")]
    pub from: ::prost::alloc::string::String,
    #[prost(string, tag="3")]
    pub to: ::prost::alloc::string::String,
    #[prost(double, tag="4")]
    pub amount: f64,
    #[prost(string, tag="5")]
    pub from_owner: ::prost::alloc::string::String,
    #[prost(string, tag="6")]
    pub to_owner: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mint {
    #[prost(string, tag="2")]
    pub to: ::prost::alloc::string::String,
    #[prost(double, tag="3")]
    pub amount: f64,
    #[prost(string, tag="4")]
    pub to_owner: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Burn {
    #[prost(string, tag="2")]
    pub from: ::prost::alloc::string::String,
    #[prost(double, tag="3")]
    pub amount: f64,
    #[prost(string, tag="4")]
    pub from_owner: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct InitializedAccount {
    #[prost(string, tag="1")]
    pub account: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub mint: ::prost::alloc::string::String,
    #[prost(string, tag="3")]
    pub owner: ::prost::alloc::string::String,
}
// @@protoc_insertion_point(module)
